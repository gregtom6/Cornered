//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Data/Input/GameInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputActions"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""bf31c3a4-8b1c-4e5b-b8b1-d693f0c06c0f"",
            ""actions"": [
                {
                    ""name"": ""ForwardBackwardMovement"",
                    ""type"": ""Value"",
                    ""id"": ""223d8b7e-cb2a-4651-b1bf-14e639edd3a8"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftRightMovement"",
                    ""type"": ""Button"",
                    ""id"": ""0a8f350e-18aa-4b9d-b44f-d008bdca1817"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PointerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""e59bddd2-801f-4277-81ea-4e4f4193b516"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PointerDelta"",
                    ""type"": ""Value"",
                    ""id"": ""d45278e7-50aa-4e7c-b259-77bad527cbca"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""3c57086a-b78c-485e-ac6c-ab2fdc044be7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PickupDrop"",
                    ""type"": ""Button"",
                    ""id"": ""f4962851-9cbc-4cac-9bf1-207c4bcd8e4a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraUpDown"",
                    ""type"": ""Value"",
                    ""id"": ""b53764fa-bb93-449d-8b64-6f02e7303467"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraLeftRight"",
                    ""type"": ""Value"",
                    ""id"": ""9dc1bae0-f9bf-4097-b646-3f01a3501b86"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard WS"",
                    ""id"": ""6c1b140f-c333-4d50-b46e-48ca46dd7b47"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardBackwardMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""577296e9-0312-4294-a901-16fa0e2b0f4b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardBackwardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6449bc70-6c3f-4029-8e3b-2be971937d03"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardBackwardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard AD"",
                    ""id"": ""999a9ffc-7a97-41d9-89a1-dc4c53bb7461"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftRightMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""490c2b17-8b34-45fa-8317-0c45efcbd05c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftRightMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""35af9673-a855-451e-850e-b674404db823"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftRightMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7421ed43-07ab-4954-bd75-3c500f23f111"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ad50c87-519a-4272-aa7c-d1fea78228fb"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8fe9c3d2-e6c5-44a3-af08-d09860d5a167"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50e3360b-2dce-42bd-8e67-4b82ea58ec7b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickupDrop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard LeftRight"",
                    ""id"": ""0c15eebc-c392-4fb8-b146-38502f031386"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLeftRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""7eebc31d-5c3d-48e6-894c-d09896bcdee8"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""7608dfc5-b29b-4c61-979a-348c50f4b506"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard UpDown"",
                    ""id"": ""0b62cb57-9306-483d-90c8-696712b6d224"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraUpDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4bcfc2a4-547c-44b1-8c59-fbfcbea185a4"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c94eb3e9-33e9-45b9-90ad-22e9ab51a3a1"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_ForwardBackwardMovement = m_Gameplay.FindAction("ForwardBackwardMovement", throwIfNotFound: true);
        m_Gameplay_LeftRightMovement = m_Gameplay.FindAction("LeftRightMovement", throwIfNotFound: true);
        m_Gameplay_PointerPosition = m_Gameplay.FindAction("PointerPosition", throwIfNotFound: true);
        m_Gameplay_PointerDelta = m_Gameplay.FindAction("PointerDelta", throwIfNotFound: true);
        m_Gameplay_Interact = m_Gameplay.FindAction("Interact", throwIfNotFound: true);
        m_Gameplay_PickupDrop = m_Gameplay.FindAction("PickupDrop", throwIfNotFound: true);
        m_Gameplay_CameraUpDown = m_Gameplay.FindAction("CameraUpDown", throwIfNotFound: true);
        m_Gameplay_CameraLeftRight = m_Gameplay.FindAction("CameraLeftRight", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_ForwardBackwardMovement;
    private readonly InputAction m_Gameplay_LeftRightMovement;
    private readonly InputAction m_Gameplay_PointerPosition;
    private readonly InputAction m_Gameplay_PointerDelta;
    private readonly InputAction m_Gameplay_Interact;
    private readonly InputAction m_Gameplay_PickupDrop;
    private readonly InputAction m_Gameplay_CameraUpDown;
    private readonly InputAction m_Gameplay_CameraLeftRight;
    public struct GameplayActions
    {
        private @GameInputActions m_Wrapper;
        public GameplayActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ForwardBackwardMovement => m_Wrapper.m_Gameplay_ForwardBackwardMovement;
        public InputAction @LeftRightMovement => m_Wrapper.m_Gameplay_LeftRightMovement;
        public InputAction @PointerPosition => m_Wrapper.m_Gameplay_PointerPosition;
        public InputAction @PointerDelta => m_Wrapper.m_Gameplay_PointerDelta;
        public InputAction @Interact => m_Wrapper.m_Gameplay_Interact;
        public InputAction @PickupDrop => m_Wrapper.m_Gameplay_PickupDrop;
        public InputAction @CameraUpDown => m_Wrapper.m_Gameplay_CameraUpDown;
        public InputAction @CameraLeftRight => m_Wrapper.m_Gameplay_CameraLeftRight;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @ForwardBackwardMovement.started += instance.OnForwardBackwardMovement;
            @ForwardBackwardMovement.performed += instance.OnForwardBackwardMovement;
            @ForwardBackwardMovement.canceled += instance.OnForwardBackwardMovement;
            @LeftRightMovement.started += instance.OnLeftRightMovement;
            @LeftRightMovement.performed += instance.OnLeftRightMovement;
            @LeftRightMovement.canceled += instance.OnLeftRightMovement;
            @PointerPosition.started += instance.OnPointerPosition;
            @PointerPosition.performed += instance.OnPointerPosition;
            @PointerPosition.canceled += instance.OnPointerPosition;
            @PointerDelta.started += instance.OnPointerDelta;
            @PointerDelta.performed += instance.OnPointerDelta;
            @PointerDelta.canceled += instance.OnPointerDelta;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @PickupDrop.started += instance.OnPickupDrop;
            @PickupDrop.performed += instance.OnPickupDrop;
            @PickupDrop.canceled += instance.OnPickupDrop;
            @CameraUpDown.started += instance.OnCameraUpDown;
            @CameraUpDown.performed += instance.OnCameraUpDown;
            @CameraUpDown.canceled += instance.OnCameraUpDown;
            @CameraLeftRight.started += instance.OnCameraLeftRight;
            @CameraLeftRight.performed += instance.OnCameraLeftRight;
            @CameraLeftRight.canceled += instance.OnCameraLeftRight;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @ForwardBackwardMovement.started -= instance.OnForwardBackwardMovement;
            @ForwardBackwardMovement.performed -= instance.OnForwardBackwardMovement;
            @ForwardBackwardMovement.canceled -= instance.OnForwardBackwardMovement;
            @LeftRightMovement.started -= instance.OnLeftRightMovement;
            @LeftRightMovement.performed -= instance.OnLeftRightMovement;
            @LeftRightMovement.canceled -= instance.OnLeftRightMovement;
            @PointerPosition.started -= instance.OnPointerPosition;
            @PointerPosition.performed -= instance.OnPointerPosition;
            @PointerPosition.canceled -= instance.OnPointerPosition;
            @PointerDelta.started -= instance.OnPointerDelta;
            @PointerDelta.performed -= instance.OnPointerDelta;
            @PointerDelta.canceled -= instance.OnPointerDelta;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @PickupDrop.started -= instance.OnPickupDrop;
            @PickupDrop.performed -= instance.OnPickupDrop;
            @PickupDrop.canceled -= instance.OnPickupDrop;
            @CameraUpDown.started -= instance.OnCameraUpDown;
            @CameraUpDown.performed -= instance.OnCameraUpDown;
            @CameraUpDown.canceled -= instance.OnCameraUpDown;
            @CameraLeftRight.started -= instance.OnCameraLeftRight;
            @CameraLeftRight.performed -= instance.OnCameraLeftRight;
            @CameraLeftRight.canceled -= instance.OnCameraLeftRight;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnForwardBackwardMovement(InputAction.CallbackContext context);
        void OnLeftRightMovement(InputAction.CallbackContext context);
        void OnPointerPosition(InputAction.CallbackContext context);
        void OnPointerDelta(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnPickupDrop(InputAction.CallbackContext context);
        void OnCameraUpDown(InputAction.CallbackContext context);
        void OnCameraLeftRight(InputAction.CallbackContext context);
    }
}
